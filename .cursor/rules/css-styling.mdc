---
description: 
globs: 
alwaysApply: true
---
# CSS Styling Organization

## Rule: Static Styles in CSS Files

All static styles should be defined in dedicated CSS files rather than inline or in component style blocks, unless they are:
- Dynamically generated based on user interaction
- Dependent on component state
- Required for component-specific animations
- Part of a component's core functionality that cannot be separated

### Examples

✅ Good:
```css
/* styles/buttons.css */
.primary-button {
    background: #24c8db;
    color: #333;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
}
```

❌ Bad:
```svelte
<button style="background: #24c8db; color: #333; padding: 0.5rem 1rem; border-radius: 0.5rem;">
    Click me
</button>
```

### Exceptions

The following cases are allowed to use inline or component-scoped styles:
1. Dynamic styles based on user input
2. State-dependent styling (e.g., hover effects in interactive components)
3. Component-specific animations
4. Styles that are tightly coupled to component logic

### File Organization

CSS files should be organized in the `src/lib/styles` directory with clear naming conventions:
- `layout.css` - Layout-related styles
- `components.css` - Reusable component styles
- `animations.css` - Animation keyframes
- `variables.css` - CSS variables and theme
- `global.css` - Global styles

